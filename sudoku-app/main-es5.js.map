{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_user/userPreferences.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/pages/game/game.component.ts","webpack:///src/app/pages/game/game.component.html","webpack:///src/app/pages/game/hotkey.directive.ts","webpack:///src/app/pages/game/right-column/newGame.service.ts","webpack:///src/app/pages/game/right-column/numberButton.service.ts","webpack:///src/app/pages/game/sudoku/board.service.ts","webpack:///src/app/pages/game/sudoku/cell.model.ts","webpack:///src/app/pages/game/sudoku/hotkey-delete.directive.ts","webpack:///src/app/pages/leaderboards/leaderboards.component.ts","webpack:///src/app/pages/leaderboards/leaderboards.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","UserPreferences","toggle_boardPresetInputs_isDisabled","classic_colors","highlightPath_state","highlightPath_name","disabledInput_bgColor","disabledInput_fontColor","input_bgColor","input_fontColor","highlightPath_bgColor","highlightPath_fontColor","highlightPath_selected_bgColor","highlightPath_selected_fontColor","highlightPath_disabled_bgColor","highlightPath_disabled_fontColor","dupe_bgColor","dupe_fontColor","dupe_selected_bgColor","dupe_selected_fontColor","incorrect_fontColor","hintSudokuCom_bgColor","isShowDisabledAsBald","colors","b","routes","AppRoutingModule","forRoot","imports","AppComponent","board","http","title","loadedFeature","testLeft","event","console","log","getFileData","setTimeout","live","build_cell_array_fromString2","solved","stringOf_sudoku_txt","copy","solveSudoku","feature","onNavigate","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","featureSelected","emit","onSelect","GameComponent","userPref","newGame","numBtn","array","cpx","dupe","scanButtonName","splitState","splitBtnName","pencil","pencilButtonText","toggleSplitBoard","numbBtnArray","randArray","min","max","Math","floor","random","arr1","arr2","i","length","push","arr","utilArr","copyArray","randomNum","randomize","splice","start","t","j","num","postSudoku","post","subscribe","responseData","sudokuToString","parseSudoku","saveSudoku","get","pipe","response","pathToFile","responseType","text","build_cell_array_fromString","build_cell_array","copyBoardS","r","c","liveBoard","startBoard","n","isPresetIncluded","undefined","initPencilArray","charAt","bgColor","fontColor","ar","row","col","add_disabled_fontColor_toCell","highlightSelect","sRow","sCol","decolor_bg","highlightPath_name_setter","errorColorArray","subgridRow","row_ofSubgrid","subgridCol","col_ofSubgrid","rows","isDupe","color_font","columns","rwp","clp","target","value","decolor_font","isEmpty","checkDupe","isPencil","rPen","cPen","bg","color_live_bg","color","number","slctdCell","rowSubGrid","colSubGrid","preHoverBgColor","r2","c2","sqrt","boxRowStart","boxColStart","d","column","arrayToChange","arrayToCopy","isNum","isBgColor","isFontColor","hintCol","hintRow","hintNum","doSomething","resetHint","isHint","isSafe","rndNum","genSudoku","update_userPref_disabled_colors","numberBtnArray","showErrors","colPencil","rowPencil","cols","togglePencil","ro","co","key","erase","hintSudokuCom","showErrors_btn","onTypePencil","testPencil","HotkeyDirective","elementRef","renderer","devModeOn","NewGame","NumberButton","numberBtn","Board","fBoard","cell","CellInputDelete","Leaderboards","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class UserPreferences {\r\n  //constructor(public sudoku: SudokuComponent) {}\r\n  //disabled input colors\r\n\r\n  /**toggle disabled for testing */ toggle_boardPresetInputs_isDisabled = true;\r\n  /**classic colors? */ classic_colors = false;\r\n\r\n  highlightPath_state = true; //isHighlightPath -> isHighlight()\r\n\r\n  highlightPath_name: string =\r\n    \"Turn highlight \" + (this.highlightPath_state ? \"Off\" : \"On\"); //Interpolated string that's being shown on the button for highlgiht paths\r\n\r\n  set highlightPath_name_setter(b) {\r\n    this.highlightPath_name =\r\n      \"Turn highlight \" + (this.highlightPath_state ? \"Off\" : \"On\") + \" \";\r\n  }\r\n\r\n  /**Default Bg-color: Grey */ disabledInput_bgColor = \"grey\";\r\n  /**Default Font-color: Ivory*/ disabledInput_fontColor = \"ivory\";\r\n\r\n  //----------------------------------------input colors\r\n  /**Default Bg-color: White */ input_bgColor = \"white\";\r\n  /**Default Font-color: Black */ input_fontColor = \"black\";\r\n\r\n  //------------------------------------highlight path colors\r\n  /**Default BG-color: Lightblue */ highlightPath_bgColor = \"lightblue\";\r\n  /**Default Font-color: -Black- */ highlightPath_fontColor = \"\";\r\n\r\n  /**Default BG-color: Yellow */ highlightPath_selected_bgColor = \"yellow\";\r\n  /**Default Font-color: -Black- */ highlightPath_selected_fontColor = \"\";\r\n\r\n  /**Default BG-color: Cadetblue */ highlightPath_disabled_bgColor =\r\n    \"cadetblue\";\r\n  /**Default Font-color: -Black- */ highlightPath_disabled_fontColor = \"\";\r\n\r\n  //--------------------------------------Duplicate colors\r\n  /**Default Bg-color: Red */ dupe_bgColor = \"red\";\r\n  /**Default Font-color: -Black- */ dupe_fontColor = \"red\";\r\n\r\n  /**Default Bg-Color: -Black- */ dupe_selected_bgColor = \"\";\r\n  /**Default Font-color: Red */ dupe_selected_fontColor = \"black\";\r\n\r\n  /**Default ShowErrors() Font-color: yellow */ incorrect_fontColor =\r\n    \"orangered\";\r\n\r\n  hintSudokuCom_bgColor = \"lightyellow\";\r\n\r\n  isShowDisabledAsBald = true;\r\n\r\n  /**scanForDupes() background colors for each different number.1~9*/\r\n  colors: string[] = [\r\n    \"orange\",\r\n    \"teal\", //1\r\n    \"purple\", //2\r\n    \"pink\", //3\r\n    \"blue\", //4\r\n    \"yellow\", //5\r\n    \"lightyellow\", //6\r\n    \"green\", //7\r\n    \"pink\", //8\r\n    \"brown\", //9\r\n  ];\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  Component,\n  Injectable,\n  HostListener,\n  ViewChild,\n  AfterViewInit,\n} from \"@angular/core\";\nimport { GameComponent } from \"./pages/game/game.component\";\nimport { Board } from \"./pages/game/sudoku/board.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  constructor(public board: Board, public http: HttpClientModule) {}\n  @HostListener(\"window:mouseup\", [\"$event\"])\n  onMouseUp(event) {\n    console.log(event);\n  }\n\n  @ViewChild(GameComponent) gameComp;\n\n  ngOnInit(): void {\n    this.board.getFileData();\n    this.board.classic_colors(true);\n    setTimeout(() => (console.log(this.board.live), 1000));\n\n    this.board.build_cell_array_fromString2(\n      this.board.solved,\n      this.board.stringOf_sudoku_txt,\n      this.board.copy\n    );\n    this.board.solveSudoku(this.board.solved, 9);\n  }\n\n  title = \"sudoku-app\";\n\n  loadedFeature = \"SudokuV1\";\n\n  onNavigate(feature: string) {\n    this.loadedFeature = feature;\n  }\n  testLeft = 300;\n}\n","<app-header (featureSelected)=\"onNavigate($event)\"></app-header>\n<app-gamePage *ngIf=\"loadedFeature === 'SudokuV1'\"></app-gamePage>\n<app-leaderboards *ngIf=\"loadedFeature !== 'SudokuV1'\"></app-leaderboards>\n\n<script>\n  document.addEventListener(\"keypress\", function ($event) {\n    if (event.keyCode == 13) {\n      alert(\"You just hit enter.\");\n      testLeft = testLeft - 10;\n    } else if (event.keyCode == 65) {\n      alert(\"You just press A.\");\n      testLeft = testLeft - 10;\n    } else if (event.keyCode == 97) {\n      testLeft = testLeft - 10;\n    } else {\n      alert(\"You press something other than A, a and ENTER key\");\n    }\n  });\n</script>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { GameComponent } from \"./pages/game/game.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { UserPreferences } from \"./_user/userPreferences.service\";\nimport { Board } from \"./pages/game/sudoku/board.service\";\nimport { Leaderboards } from \"./pages/leaderboards/leaderboards.component\";\nimport { CellInputDelete } from \"./pages/game/sudoku/hotkey-delete.directive\";\nimport { HotkeyDirective } from \"./pages/game/hotkey.directive\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n    HeaderComponent,\n    Leaderboards,\n    CellInputDelete,\n    HotkeyDirective,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [UserPreferences, Board],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n})\r\nexport class HeaderComponent {\r\n  @Output() featureSelected = new EventEmitter<string>();\r\n\r\n  onSelect(feature: string) {\r\n    this.featureSelected.emit(feature);\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-default\"\r\n  style=\"min-height: 0px; margin-bottom: 25px;\"\r\n>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"col-xs-1\"></div>\r\n    <div class=\"navbar-header\">\r\n      <a\r\n        [style.color]=\"'black'\"\r\n        href=\"#\"\r\n        class=\"navbar-brand\"\r\n        style=\"font-weight: bold;\"\r\n        >SudokuApp<a style=\"color: blue; font-weight: bold; font-size: 20px;\"\r\n          >.</a\r\n        >com</a\r\n      >\r\n    </div>\r\n    <div class=\"col-xs-1\"></div>\r\n    <div class=\"collapse navbar-collapse\">\r\n      <div\r\n        style=\"\r\n          font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS',\r\n            sans-serif;\r\n          font-weight: bold;\r\n          font-size: 18px;\r\n        \"\r\n      >\r\n        <ul class=\"nav navbar-nav\">\r\n          <li>\r\n            <a\r\n              [style.color]=\"'dodgerblue'\"\r\n              href=\"#\"\r\n              (click)=\"onSelect('SudokuV1')\"\r\n              >Game</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a\r\n              [style.color]=\"'dodgerblue'\"\r\n              href=\"#\"\r\n              (click)=\"onSelect('SudokuV2')\"\r\n              >Leaderboards</a\r\n            >\r\n          </li>\r\n\r\n          <li><a [style.color]=\"'dodgerblue'\" href=\"#\">Tips</a></li>\r\n        </ul>\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n          <li class=\"dropdown\">\r\n            <a\r\n              href=\"#\"\r\n              class=\"dropdown-toggle\"\r\n              role=\"button\"\r\n              style=\"font-size: 15px;\"\r\n              ><img\r\n                src=\"assets/langs/engUs.PNG\"\r\n                alt=\"\"\r\n                class=\"img-responsive\"\r\n                style=\"\r\n                  max-height: 10px;\r\n                  float: left;\r\n                  margin-right: 4px;\r\n                  margin-top: 5px;\r\n                \" />\r\n              English\r\n              <span class=\"caret\"></span\r\n            ></a>\r\n            <ul class=\"dropdown-menu\">\r\n              <li><a href=\"#\">Sa</a></li>\r\n              <li><a href=\"#\">Fe</a></li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  ElementRef,\n} from \"@angular/core\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { switchMap, repeatWhen } from \"rxjs/operators\";\nimport { cell } from \"./sudoku/cell.model\";\nimport { UserPreferences } from \"../../_user/userPreferences.service\";\nimport { Board } from \"./sudoku/board.service\";\nimport { NewGame } from \"./right-column/newGame.service\";\nimport { NumberButton } from \"./right-column/numberButton.service\";\nimport { stringify } from \"querystring\";\n\n@Component({\n  selector: \"app-gamePage\",\n  templateUrl: \"./game.component.html\",\n  styleUrls: [\"./game.component.css\"],\n  providers: [NewGame, NumberButton],\n})\nexport class GameComponent implements OnInit {\n  constructor(\n    private http?: HttpClient,\n    public userPref?: UserPreferences,\n    public board?: Board,\n    public newGame?: NewGame,\n    public numBtn?: NumberButton\n  ) {\n    this.toggleSplitBoard();\n  }\n\n  ngOnInit(): void {\n    this.numbBtnArray();\n    this.randArray(this.array); //test\n    console.log(\"array\"); //test\n    console.log(this.array); //test\n  }\n  array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  randomize(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  copyArray(arr1: number[], arr2: number[]) {\n    for (let i = 0; i < arr1.length; i++) {\n      arr2.push(arr1[i]);\n    }\n  }\n\n  randArray(arr) {\n    let utilArr = [];\n    this.copyArray(arr, utilArr);\n    // console.log(\"copyArray: \" + utilArr);\n    let i = 0;\n    let randomNum;\n    while (!(utilArr.length == 0 || i == 9)) {\n      randomNum = this.randomize(0, 8 - i);\n      arr[i] = utilArr[randomNum];\n      utilArr.splice(randomNum, 1);\n      // console.log(\"update utilArr: \" + utilArr);\n      i++;\n    }\n  }\n\n  testLeft = 300;\n\n  cpx = 60;\n\n  printSudoku() {\n    console.log(this.board.live);\n    console.log(this.board.start);\n    console.log(this.board.solved);\n    console.log(this.board.copy);\n  }\n\n  parseSudoku() {\n    let t = \"\";\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.board.live[i][j].num == null) t = t + \"0\";\n        else t = t + this.board.live[i][j].num;\n      }\n    }\n    return t;\n  }\n\n  saveSudoku(postSudoku: string) {\n    this.http\n      .post(\"http://localhost:3000/a\", postSudoku)\n      .subscribe((responseData) => {});\n  }\n\n  saveSudokuButton() {\n    let sudokuToString = this.parseSudoku();\n    this.saveSudoku(sudokuToString);\n  }\n\n  /**This method is ran on ng-init and is responsible for importing a sudoku board from the\n   * sudoku.txt file into a string variable to be used later */\n  getFileData() {\n    setTimeout(() => {\n      console.log(this.board.live);\n    }, 1000);\n    return this.http\n      .get(\"/assets/read/filePath.json\")\n      .pipe(\n        switchMap((response: any) =>\n          this.http.get(response.pathToFile, {\n            responseType: \"text\",\n          })\n        )\n      )\n      .subscribe((text) => {\n        this.board.stringOf_sudoku_txt = text;\n        this.build_cell_array_fromString(\n          this.board.live,\n          this.board.stringOf_sudoku_txt,\n          this.board.start\n        );\n        this.build_cell_array(this.board.copy);\n        this.build_cell_array(this.board.solved);\n        this.copyBoardS(this.board.solved, this.board.live);\n        this.solveSudoku(this.board.solved, 9);\n      });\n  }\n\n  /**Defines a declared empty cell array into a 9x9 cell array\n   * @param board empty declared cell array\n   */\n  build_cell_array(board: cell[][]) {\n    for (let r = 0; r < 9; r++) {\n      board.push();\n      board[r] = [];\n      for (let c = 0; c < 9; c++) {\n        board[r][c] = new cell();\n      }\n    }\n  }\n\n  /**builds a sudoku board(s) from a string var of sudoku numbers\n   * and an empty cell array(s)\n   * @param liveBoard cell array for LIVE board\n   * @param t imported string from txt file\n   * @param startBoard -?optional- cell array for PRESET board\n   */\n  build_cell_array_fromString(\n    liveBoard: cell[][],\n    t: string,\n    startBoard?: cell[][]\n  ) {\n    console.log(\"haha\");\n    let n = 0; //string t char index\n    let isPresetIncluded = true;\n    if (startBoard === undefined) {\n      isPresetIncluded = false;\n    } else {\n      isPresetIncluded = true;\n    }\n    for (let r = 0; r < 9; r++) {\n      liveBoard.push();\n      liveBoard[r] = [];\n      if (isPresetIncluded) {\n        startBoard.push();\n        startBoard[r] = [];\n      }\n      for (let c = 0; c < 9; c++) {\n        liveBoard[r][c] = new cell();\n        this.initPencilArray(liveBoard[r][c]);\n        startBoard[r][c] = new cell();\n        if (t.charAt(n + 1) == \"0\") {\n          liveBoard[r][c].num = null; //   -redundant?\n          liveBoard[r][c].bgColor = this.userPref.input_bgColor;\n          liveBoard[r][c].fontColor = this.userPref.input_fontColor;\n          if (isPresetIncluded) {\n            startBoard[r][c].num = null; //   -redundant?\n            startBoard[r][c].bgColor = this.userPref.input_bgColor;\n            startBoard[r][c].fontColor = this.userPref.input_fontColor;\n          }\n        } else {\n          liveBoard[r][c].num = +t.charAt(n + 1);\n          liveBoard[r][c].bgColor = this.userPref.disabledInput_bgColor;\n          liveBoard[r][c].fontColor = this.userPref.disabledInput_fontColor;\n          if (isPresetIncluded) {\n            startBoard[r][c].num = +t.charAt(n + 1);\n            startBoard[r][c].bgColor = this.userPref.disabledInput_bgColor;\n            startBoard[r][c].fontColor = this.userPref.disabledInput_fontColor;\n          }\n        }\n        n = n + 2;\n      }\n      n = n + 4;\n    }\n    console.log(\"--------live--------\");\n    console.log(liveBoard);\n\n    console.log(\"--------start--------\");\n    console.log(startBoard);\n  }\n\n  /** If cell array included. it'll add the disabled fontColor of the cell inside that array instead of\n   * the start array  */\n  add_disabled_fontColor_toCell(r: number, c: number, ar?: cell[][]) {\n    if (this.board.start[r][c].bgColor == this.userPref.disabledInput_bgColor) {\n      if (ar === undefined) {\n        this.board.start[r][\n          c\n        ].fontColor = this.userPref.disabledInput_fontColor;\n      } else {\n        ar[r][c].fontColor = this.userPref.disabledInput_fontColor;\n      }\n    } else {\n      if (ar === undefined) {\n        this.board.start[r][c].fontColor = this.userPref.input_fontColor;\n      } else {\n        ar[r][c].fontColor = this.userPref.input_fontColor;\n      }\n    }\n  }\n\n  /**re-adds disabled_fontColor to PRESET sudoku array\n   * ??@param -OPTIONAL- if a cell array exist here, it'll have disabled_fontColor\n   * added to THAT array, instead of the PRESET array  */\n  add_disabled_fontColor(ar?: cell[][]) {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (ar === undefined) {\n          this.add_disabled_fontColor_toCell(row, col);\n        } else {\n          this.add_disabled_fontColor_toCell(row, col, ar);\n        }\n      }\n    }\n  }\n\n  dupe: boolean = false;\n  scanButtonName: string = \"scan off\"; //  WIP\n\n  splitState = false;\n  splitBtnName = \"SplitBoard\"; //The interpolated string shown on the splitscreen button -> split()\n\n  /**Split OR Unsplit the sudoku board appearance. This Method is used upon clicking the Split button */\n  toggleSplitBoard() {\n    this.splitState = !this.splitState;\n    if (this.splitState) {\n      this.splitBtnName = \"Unsplit Board\";\n    } else {\n      this.splitBtnName = \"Split Board\";\n    }\n  }\n\n  /**Turn on path highlights OR turn off path highlights. This Method is used upon clicking the Highlight button */\n  togglePathHighlight() {\n    this.userPref.highlightPath_state = !this.userPref.highlightPath_state;\n    if (this.userPref.highlightPath_state) {\n      this.highlightSelect(this.board.sRow, this.board.sCol);\n    } else {\n      this.decolor_bg();\n    }\n    this.userPref.highlightPath_name_setter = 1;\n  }\n\n  /**Method to check for duplicate numbers in the same Row, Column or in the same 3x3 family.\n   * If one or more duplicates are found, the selected FONT-color will change to Red\n   * Each duplicate found will have their index BACKGROUND color changed to Red\n   */\n  checkDupe(r: number, c: number, errorColorArray?: string[]) {\n    let b: boolean = false;\n    let subgridRow = this.row_ofSubgrid(r);\n    let subgridCol = this.col_ofSubgrid(c);\n    let row;\n    let col;\n    for (let rows = 0; rows < 9; rows++) {\n      if (\n        this.isDupe(r, c, rows, c) //checks all nums in same column\n      ) {\n        b = true;\n        if (errorColorArray === undefined) {\n          this.color_font(rows, c, this.userPref.dupe_fontColor);\n        } else {\n          this.board.live[rows][c].bgColor =\n            errorColorArray[this.board.live[rows][c].num];\n        }\n      }\n    }\n    for (let columns = 0; columns < 9; columns++) {\n      if (\n        this.isDupe(r, c, r, columns) //checks all nums in same row\n      ) {\n        b = true;\n        if (errorColorArray === undefined) {\n          this.color_font(r, columns, this.userPref.dupe_fontColor);\n        } else {\n          this.board.live[r][columns].bgColor =\n            errorColorArray[this.board.live[r][columns].num];\n        }\n      }\n    }\n    for (let rwp = 0; rwp <= 2; rwp++) {\n      for (let clp = 0; clp <= 2; clp++) {\n        row = subgridRow + rwp;\n        col = subgridCol + clp;\n        if (this.isDupe(r, c, row, col)) {\n          b = true;\n          if (errorColorArray === undefined) {\n            this.color_font(row, col, this.userPref.dupe_fontColor);\n          } else {\n            this.board.live[row][col].bgColor =\n              errorColorArray[+this.board.live[row][col].num];\n          }\n        }\n      }\n    }\n    if (b) {\n      this.color_font(r, c, this.userPref.dupe_selected_fontColor);\n    } else {\n      this.color_font(r, c, this.userPref.input_fontColor);\n    }\n    return b;\n  }\n\n  /**This method is called upon TYPING/INPUTING anything at all\n   * @param event The button pressed. Could be back_space as well as any character typed\n   * @param row Current Row index of whichever field that had anything typed on\n   * @param col Current Column index of whichever field that had anything typed on*/\n  onType(event: any, row: number, col: number) {\n    if (+event.target.value % 10 <= 9 && +event.target.value % 10 > 0) {\n      this.decolor_bg();\n      this.decolor_font();\n      this.board.live[this.board.sRow][this.board.sCol].num =\n        +event.target.value % 10;\n      console.log(this.board.live[row][col].pencil);\n\n      if (this.isEmpty(row, col)) {\n        this.decolor_bg();\n        this.decolor_font();\n      }\n      console.log(event);\n      this.highlightSelect(this.board.sRow, this.board.sCol);\n      if (!this.isEmpty(row, col)) {\n        this.checkDupe(row, col);\n      }\n\n      this.highlightSelect(this.board.sRow, this.board.sCol);\n    } else {\n      this.board.live[this.board.sRow][this.board.sCol].num = null;\n      this.decolor_bg();\n      this.decolor_font();\n      this.highlightSelect(this.board.sRow, this.board.sCol);\n    }\n    this.pencil = \"\";\n    this.pencilButtonText = \"\";\n    event.target.value = \"\";\n  }\n\n  onTypePencil(event: any) {\n    console.log(+event.target.value);\n    if (+event.target.value % 10 <= 9 && +event.target.value % 10 > 0) {\n      if (this.board.live[this.board.sRow][this.board.sCol].isPencil) {\n        let rPen = Math.floor(((+event.target.value % 10) - 1) / 3);\n        let cPen = Math.floor(((+event.target.value % 10) - 1) % 3);\n        console.log(\"rPen=\" + rPen);\n        console.log(\"cPen=\" + cPen);\n        console.log(event.target.value);\n        console.log(\"event value=\" + event.target.value);\n        console.log(\n          \"pencil value=\" +\n            this.board.live[this.board.sRow][this.board.sCol].pencil[rPen][cPen]\n        );\n        if (\n          this.board.live[this.board.sRow][this.board.sCol].pencil[rPen][\n            cPen\n          ] == null\n        ) {\n          this.board.live[this.board.sRow][this.board.sCol].pencil[rPen][cPen] =\n            +event.target.value % 10;\n        } else {\n          this.board.live[this.board.sRow][this.board.sCol].pencil[rPen][\n            cPen\n          ] = null;\n        }\n      } else {\n        this.decolor_bg();\n        this.decolor_font();\n        this.board.live[this.board.sRow][this.board.sCol].num =\n          +event.target.value % 10;\n        if (!this.isEmpty(this.board.sRow, this.board.sCol)) {\n          this.checkDupe(this.board.sRow, this.board.sCol);\n        }\n        this.highlightSelect(this.board.sRow, this.board.sCol);\n      }\n    }\n    this.pencil = \"\";\n    this.pencilButtonText = \"\";\n    event.target.value = \"\";\n  }\n  pencil = \"\";\n  pencilButtonText = \"\";\n\n  /**saves current Cow can Column indexes in selectedCell current service vars\n   * for future uses */\n  slctdCell(r: number, c: number) {\n    this.board.sRow = r;\n    this.board.sCol = c;\n  }\n\n  isCellEmpty(r?: number, c?: number) {\n    if (r === undefined) {\n      let r = this.board.sRow;\n    }\n    if (c === undefined) {\n      let c = this.board.sCol;\n    }\n    if (this.board.live[r][c].num == 0 || this.board.live[r][c].num === null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isSlctdEmpty() {\n    if (\n      this.board.live[this.board.sRow][this.board.sCol].num == 0 ||\n      this.board.live[this.board.sRow][this.board.sCol].num === null\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**Restores all cells BG colors to default\n   * @param r Row index of current row\n   * @param c Column index of current column*/\n  decolor_bg(bg?: string) {\n    if (bg !== undefined) this.color_live_bg(bg);\n    else\n      for (let row = 0; row < 9; row++) {\n        for (let col = 0; col < 9; col++) {\n          this.board.live[row][col].bgColor = this.board.start[row][\n            col\n          ].bgColor;\n        }\n      }\n  }\n\n  color_bg(r: number, c: number, color: string) {\n    this.board.live[r][c].bgColor = color;\n  }\n\n  /**Colors BG of ALL cells*/\n  color_live_bg(color: string) {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        this.board.live[row][col].bgColor = color;\n      }\n    }\n  }\n\n  /**Colors BG of NON-DISABLED cells*/\n  color_notDisabled_bg(color: string) {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (\n          this.board.start[row][col].num == null ||\n          this.board.start[row][col].num == 0\n        )\n          this.board.live[row][col].bgColor = color;\n      }\n    }\n  }\n\n  /**Restores all cells FONT colors to default\n   * @param r Row index of current row\n   * @param c Column index of current column*/\n  decolor_font() {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        this.board.live[row][col].fontColor = this.board.start[row][\n          col\n        ].fontColor;\n      }\n    }\n  }\n\n  color_font(r: number, c: number, color: string) {\n    this.board.live[r][c].fontColor = color;\n  }\n\n  /**Adds FONT color for ALL cells*/\n  color_live_font(color: string) {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        this.board.live[row][col].fontColor = color;\n      }\n    }\n  }\n\n  /**Adds FONT color for NON-disabled-cells*/\n  color_notDisabled_font(color: string) {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (\n          this.board.start[row][col].num == null ||\n          this.board.start[row][col].num == 0\n        )\n          this.board.live[row][col].fontColor = color;\n      }\n    }\n  }\n\n  /**Update colors of preset */\n  update_userPref_disabled_colors() {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        this.board.start[row][\n          col\n        ].bgColor = this.userPref.disabledInput_bgColor;\n        this.board.start[row][\n          col\n        ].fontColor = this.userPref.disabledInput_fontColor;\n      }\n    }\n    this.decolor_bg();\n    this.decolor_font();\n  }\n\n  /**related to number buttons. on click */\n  onClick_numberBtn(number: number) {\n    this.board.live[this.board.sRow][this.board.sCol].num = number;\n    if (this.isEmpty(this.board.sRow, this.board.sCol)) {\n      this.decolor_bg();\n    }\n    this.checkDupe(this.board.sRow, this.board.sCol);\n  }\n\n  /**This method executes upon clicking any input box in the game-board\n   * @param r Row index of selected row\n   * @param c Column index of selected column*/\n  onClick_cell(r: number, c: number) {\n    this.slctdCell(r, c);\n    console.log(\"selected row=\" + this.board.sRow);\n    console.log(\"selected col=\" + this.board.sCol);\n    this.decolor_bg();\n    this.decolor_font();\n    let rwp = 0;\n    let clp = 0;\n    if (this.userPref.highlightPath_state) {\n      this.highlightSelect(r, c);\n    }\n  }\n\n  row_ofSubgrid(row?: number) {\n    if (row === undefined) {\n      let row = this.board.sRow;\n    }\n    if (row < 3) {\n      return 0;\n    }\n    if (row >= 3 && row < 6) {\n      return 3;\n    }\n    if (row > 5) {\n      return 6;\n    }\n  }\n\n  col_ofSubgrid(col?: number) {\n    if (col === undefined) {\n      let row = this.board.sCol;\n    }\n    if (col < 3) {\n      return 0;\n    }\n    if (col >= 3 && col < 6) {\n      return 3;\n    }\n    if (col > 5) {\n      return 6;\n    }\n  }\n\n  /** Highlights the row, column and family of the selected bracket for player clarity\n   * @param r row\n   * @param c column */\n  highlightSelect(r: number, c: number) {\n    if (this.userPref.highlightPath_state) {\n      let rowSubGrid = this.row_ofSubgrid(r);\n      let colSubGrid = this.col_ofSubgrid(c);\n      let row;\n      let col;\n      for (let rwp = 0; rwp <= 2; rwp++) {\n        for (let clp = 0; clp <= 2; clp++) {\n          row = rowSubGrid + rwp;\n          col = colSubGrid + clp;\n          if (\n            this.board.start[row][col].bgColor ==\n            this.userPref.disabledInput_bgColor\n          )\n            this.board.live[row][\n              col\n            ].bgColor = this.userPref.highlightPath_disabled_bgColor;\n          else\n            this.board.live[row][\n              col\n            ].bgColor = this.userPref.highlightPath_bgColor;\n        }\n      }\n      for (let columns = 0; columns < 9; columns++) {\n        if (\n          this.board.start[r][columns].bgColor ==\n          this.userPref.disabledInput_bgColor\n        ) {\n          this.board.live[r][\n            columns\n          ].bgColor = this.userPref.highlightPath_disabled_bgColor;\n        } else\n          this.board.live[r][\n            columns\n          ].bgColor = this.userPref.highlightPath_bgColor;\n      }\n      for (let rows = 0; rows < 9; rows++) {\n        if (\n          this.board.start[rows][c].bgColor ==\n          this.userPref.disabledInput_bgColor\n        ) {\n          this.board.live[rows][\n            c\n          ].bgColor = this.userPref.highlightPath_disabled_bgColor;\n        } else\n          this.board.live[rows][\n            c\n          ].bgColor = this.userPref.highlightPath_bgColor;\n      }\n      this.board.live[this.board.sRow][\n        this.board.sCol\n      ].bgColor = this.userPref.highlightPath_selected_bgColor;\n      this.board.live[this.board.sRow][\n        this.board.sCol\n      ].preHoverBgColor = this.userPref.highlightPath_selected_bgColor;\n    }\n  }\n\n  /** Takes two coordinates (x,y) and (x2,y2) on the game board returns true if same\n   * @param r Row index\n   * @param c Column index\n   * @param r2 Row index to compare to\n   * @param c2 Column index to compare */\n  isDupe(r: number, c: number, r2: number, c2: number) {\n    if (\n      this.board.live[r][c].num == this.board.live[r2][c2].num &&\n      this.board.live[r][c].num !== null &&\n      this.board.live[r][c].num !== 0 &&\n      (r !== r2 || c !== c2)\n    )\n      return true;\n    else return false;\n  }\n\n  /**Marks same numbers that contradict on the board with their own background color\n   * as means to check for incorrect as well as differentiate between contradictions\n   */\n  scanForErrors() {\n    let n = 0;\n    let c;\n    this.decolor_bg();\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        this.checkDupe(i, j, this.userPref.colors);\n        if (this.checkDupe(i, j, this.userPref.colors) === true) {\n          this.board.live[i][j].bgColor = this.userPref.colors[\n            this.board.live[i][j].num\n          ];\n          n++;\n        }\n      }\n    }\n  }\n\n  /** Erase the current selected area\n   *\n   * Also de-color the board. then re-color it with just highlight path colors\n   */\n  erase() {\n    this.board.live[this.board.sRow][this.board.sCol].num = null;\n    this.decolor_bg();\n    this.decolor_font();\n    this.highlightSelect(this.board.sRow, this.board.sCol);\n  }\n\n  /** Aids in disabling input brackets that were meant to be non-changeable\n   * input areas such as the starting-board Sudoku brackets that are already\n   * occupied by default.\n   *\n   * in other words this method is responsible so that the user can't write on-top of the cornerstone numbers\n   * the sudoku-game started the game with. they cannot be changed\n   *   */\n  isDisabled(r: number, c: number) {\n    if (this.userPref.toggle_boardPresetInputs_isDisabled)\n      if (\n        this.board.start[r][c].num == null ||\n        this.board.start[r][c].num == 0\n      ) {\n        return false;\n      } else {\n        return true;\n      }\n  }\n\n  toggle_boardPresetInputs_isDisabled() {\n    this.userPref.toggle_boardPresetInputs_isDisabled = !this.userPref\n      .toggle_boardPresetInputs_isDisabled;\n  }\n\n  /**Returns TRUE if there aren't any other identical numbers in it's row, column or sub-grid\n   * else returns FALSE\n   *\n   * @param row Row index\n   * @param col Column index\n   * @param num The number that resides in the currently selected bracket\n   */\n  isSafe(arr: cell[][], row: number, col: number, num: number) {\n    for (let columns = 0; columns < this.board.live.length; columns++) {\n      if (arr[row][columns].num == num) {\n        if (columns !== col) {\n          return false;\n        }\n      }\n    }\n\n    for (let rows = 0; rows < arr.length; rows++) {\n      if (arr[rows][col].num == num) {\n        if (rows !== row) {\n          return false;\n        }\n      }\n    }\n\n    let sqrt = Math.sqrt(this.board.live.length); //sqrt=3\n    let boxRowStart = row - (row % sqrt);\n    let boxColStart = col - (col % sqrt);\n\n    for (let r = boxRowStart; r < boxRowStart + sqrt; r++) {\n      for (let d = boxColStart; d < boxColStart + sqrt; d++) {\n        if (arr[r][d].num == num) {\n          if (r !== row || d !== col) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  setCell(\n    row: number,\n    column: number,\n    number?: number,\n    bgColor?: string,\n    fontColor?: string\n  ) {\n    if (!number == undefined) this.board.live[row][column].num = number;\n  }\n\n  copyBoard(\n    arrayToChange: cell[][],\n    arrayToCopy: cell[][],\n    isNum?: boolean,\n    isBgColor?: boolean,\n    isFontColor?: boolean\n  ) {\n    if (isNum === undefined) {\n      let isNum = true;\n    }\n    if (isBgColor === undefined) {\n      let isBgColor = true;\n    }\n    if (isFontColor === undefined) {\n      let isFontColor = true;\n    }\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (isNum == true) {\n          arrayToChange[row][col].num = arrayToCopy[row][col].num;\n        }\n        if (isBgColor) {\n          arrayToChange[row][col].bgColor = arrayToCopy[row][col].bgColor;\n        }\n        if (isFontColor) {\n          arrayToChange[row][col].fontColor = arrayToCopy[row][col].fontColor;\n        }\n      }\n    }\n  }\n\n  copyBoardS(arr: cell[][], arr2: cell[][]) {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        arr[row][col].num = arr2[row][col].num;\n        arr[row][col].bgColor = arr2[row][col].bgColor;\n        arr[row][col].fontColor = arr2[row][col].fontColor;\n      }\n    }\n  }\n\n  doSomething() {\n    this.copyBoardS(this.board.copy, this.board.live);\n  }\n\n  resetHint() {\n    this.board.hintCol = null;\n    this.board.hintRow = null;\n    this.board.hintNum = null;\n  }\n\n  /**Grants 1 hint on the live game board */\n  giveHint() {\n    this.doSomething();\n    this.solveSudoku(this.board.copy, 9, true);\n    console.log(this.board.hintRow);\n    console.log(this.board.hintCol);\n    console.log(this.board.hintNum);\n    this.board.live[this.board.hintRow][\n      this.board.hintCol\n    ].num = this.board.hintNum;\n    this.resetHint();\n  }\n\n  /**Solves sudoku to full\n   * @param arr Board cell array\n   * @param n Board.length\n   * @param isHint if this function is used for just a HINT. Not a full board solution   */\n  solveSudoku(arr: cell[][], n: number, isHint?: boolean) {\n    if (isHint === undefined) {\n      isHint = false;\n    }\n    let row = -1;\n    let col = -1;\n    let isEmpty = true;\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < n; j++) {\n        if (arr[i][j].num == 0 || arr[i][j].num == null) {\n          row = i;\n          col = j;\n          /*we still have some remaining missing values in Sudoku*/\n          isEmpty = false;\n          break;\n        }\n      }\n      if (!isEmpty) {\n        break;\n      }\n    }\n    /*no empty space left*/\n    if (isEmpty) {\n      return true;\n    }\n    /*else for each-row backtrack*/\n    for (let number = 1; number <= n; number++) {\n      if (this.isSafe(arr, row, col, number)) {\n        if (isHint) {\n          if (this.board.hintRow === null) {\n            this.board.hintRow = row;\n            this.board.hintCol = col;\n            this.board.hintNum = number;\n          }\n        }\n        arr[row][col].num = number;\n        if (this.solveSudoku(arr, n)) {\n          return true;\n        } else {\n          if (isHint) {\n            if (this.board.hintRow !== null) {\n              this.board.hintRow = null;\n              this.board.hintCol = null;\n              this.board.hintNum = null;\n            }\n          }\n          //replace it\n          arr[row][col].num = 0;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**Solves sudoku to full\n   * @param arr Board cell array\n   * @param n Board.length\n   * @param isHint if this function is used for just a HINT. Not a full board solution   */\n  genSudoku(arr: cell[][], n: number, rndNum?: number[]) {\n    let row = -1;\n    let col = -1;\n    let isEmpty = true;\n    let i = 0;\n    let j = 0;\n    while (i < n) {\n      while (j < n) {\n        if (arr[i][j].num == 0 || arr[i][j].num == null) {\n          row = i;\n          col = j;\n          /*we still have some remaining missing values in Sudoku*/\n          isEmpty = false;\n          break;\n        }\n        j++;\n      }\n      if (!isEmpty) {\n        break;\n      }\n      i++;\n    }\n    /*no empty space left*/\n    if (isEmpty) {\n      return true;\n    }\n    /*else for each-row backtrack*/\n    this.randArray(rndNum);\n    for (let number = 0; number <= n; number++) {\n      if (this.isSafe(arr, row, col, rndNum[number])) {\n        arr[row][col].num = number;\n        if (this.genSudoku(arr, n, rndNum)) {\n          return true;\n        } else {\n          //replace it\n          arr[row][col].num = 0;\n        }\n      }\n    }\n    return false;\n  }\n\n  classic_colors() {\n    this.userPref.highlightPath_bgColor = \"white\";\n    this.userPref.input_bgColor = \"rgb(215, 215, 215)\"; //slightly lighter- Gray\n    this.userPref.disabledInput_fontColor = \"black\";\n    this.userPref.highlightPath_disabled_bgColor = \"white\";\n    this.userPref.highlightPath_selected_bgColor = \"white\";\n    this.userPref.disabledInput_bgColor = \"rgb(215, 215, 215)\"; //slightly lighter- Gray\n    this.userPref.highlightPath_selected_bgColor = \"lightgreen\";\n    this.update_userPref_disabled_colors();\n  }\n\n  numbBtnArray() {\n    this.numBtn.numberBtnArray();\n  }\n\n  showErrors() {\n    for (let r = 0; r < 9; r++) {\n      for (let c = 0; c < 9; c++) {\n        if (this.board.live[r][c].num !== this.board.solved[r][c].num)\n          if (this.board.live[r][c].num !== this.board.start[r][c].num) {\n            this.board.live[r][c].fontColor = this.userPref.incorrect_fontColor;\n          }\n      }\n    }\n  }\n\n  showErrors_btn() {\n    this.decolor_bg();\n    this.showErrors();\n  }\n\n  isEmpty(r: number, c: number) {\n    if (this.board.live[r][c].num == null || this.board.live[r][c].num == 0)\n      return true;\n    else return false;\n  }\n\n  styleLeftBorder(col: number) {\n    if (col % 3 == 0) {\n      return \"2.5px solid black\";\n    } else {\n      return \"1px solid black\";\n    }\n  }\n\n  styleRightBorder(col: number) {\n    if ((col + 1) % 3 == 0) {\n      return \"2.5px solid black\";\n    } else {\n      return \"1px solid black\";\n    }\n  }\n\n  styleTopBorder(row: number) {\n    if (row % 3 == 0) {\n      return \"2.5px solid black\";\n    } else {\n      return \"1px solid black\";\n    }\n  }\n\n  styleBottomBorder(row: number) {\n    if ((row + 1) % 3 == 0) {\n      return \"2.5px solid black\";\n    } else {\n      return \"1px solid black\";\n    }\n  }\n\n  styleLeftBorderPencil(col: number, colPencil: number) {\n    if (colPencil == 0) {\n      if (col % 3 == 0) {\n        return \"2.5px solid black\";\n      } else return \"1px solid black\";\n    } else {\n      return \"0px\";\n    }\n  }\n\n  styleRightBorderPencil(col: number, colPencil: number) {\n    if (colPencil == 2) {\n      if ((col + 1) % 3 == 0) {\n        return \"2.5px solid black\";\n      } else return \"1px solid black\";\n    } else {\n      return \"0px\";\n    }\n  }\n\n  styleTopBorderPencil(row: number, rowPencil: number) {\n    if (rowPencil == 0) {\n      if (row % 3 == 0) {\n        return \"2.5px solid black\";\n      } else {\n        return \"1px solid black\";\n      }\n    } else {\n      return \"0px solid black\";\n    }\n  }\n\n  styleBottomBorderPencil(row: number, rowPencil: number) {\n    if (rowPencil == 2) {\n      if ((row + 1) % 3 == 0) {\n        return \"2.5px solid black\";\n      } else {\n        return \"1px solid black\";\n      }\n    } else {\n      return \"0px solid black\";\n    }\n  }\n\n  hintSudokuCom() {\n    this.board.live[this.board.sRow][this.board.sCol].num = this.board.solved[\n      this.board.sRow\n    ][this.board.sCol].num;\n    for (let rows = 0; rows < 9; rows++) {\n      for (let cols = 0; cols < 9; cols++) {\n        if (\n          this.board.live[this.board.sRow][this.board.sCol].num ==\n          this.board.live[rows][cols].num\n        )\n          this.board.live[rows][\n            cols\n          ].bgColor = this.userPref.hintSudokuCom_bgColor;\n      }\n    }\n    this.board.live[this.board.sRow][\n      this.board.sCol\n    ].bgColor = this.userPref.hintSudokuCom_bgColor;\n  }\n\n  toggle_isShowDisabledAsBold() {\n    this.userPref.isShowDisabledAsBald = !this.userPref.isShowDisabledAsBald;\n  }\n\n  initPencilArray(c: cell) {\n    for (let i = 0; i < 9; i++) {\n      c.pencil.push();\n    }\n    console.log(c);\n  }\n\n  togglePencil() {\n    this.board.live[this.board.sRow][this.board.sCol].isPencil = !this.board\n      .live[this.board.sRow][this.board.sCol].isPencil;\n    this.board.live[this.board.sRow][this.board.sCol].num = null;\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        this.board.live[this.board.sRow][this.board.sCol].pencil[i][j] = null;\n      }\n    }\n  }\n\n  testPencil() {\n    this.board.live[0][0].pencil[0][1] = 6;\n    setTimeout(() => (this.togglePencil(), 0));\n    setTimeout(() => (this.togglePencil(), 0));\n  }\n\n  mouseOver(ro, co) {\n    this.board.live[ro][co].preHoverBgColor = this.board.live[ro][co].bgColor;\n    this.board.live[ro][\n      co\n    ].bgColor = this.userPref.highlightPath_selected_bgColor;\n  }\n\n  mouseLeave(ro, co) {\n    this.board.live[ro][co].bgColor = this.board.live[ro][co].preHoverBgColor;\n  }\n\n  deleteInput(event: any, ro: number, co: number) {\n    console.log(event.key);\n    if ((event.key = \"Backspace\")) {\n      this.board.live[ro][co].num = null;\n    }\n    if ((event.key = \"Delete\")) {\n      this.board.live[ro][co].num = null;\n    }\n  }\n}\n","<div class=\"row bigRow\">\n  <div id=\"devColumn\" class=\"col-2 col-s-2 devColumn\">\n    <div id=\"devBar\" devBar *ngIf=\"board.devModeOn\">\n      <div id=\"testButtons\">\n        <p>test aid</p>\n        <button type=\"button\" (click)=\"scanForErrors()\">\n          {{ scanButtonName }}\n        </button>\n        <button type=\"button\" (click)=\"togglePathHighlight()\">\n          {{ userPref.highlightPath_name }}\n        </button>\n        <button type=\"button\" (click)=\"toggleSplitBoard()\">\n          {{ splitBtnName }}\n        </button>\n        <button type=\"button\" (click)=\"solveSudoku(board.live, 9)\">\n          Solve\n        </button>\n        <button type=\"button\" (click)=\"classic_colors()\">Classic colors</button>\n        <button type=\"button\" (click)=\"toggle_boardPresetInputs_isDisabled()\">\n          toggle disabled\n        </button>\n        <button type=\"button\" (click)=\"toggle_isShowDisabledAsBold()\">\n          unbold/bold readonly\n        </button>\n        <button type=\"button\" (click)=\"saveSudokuButton()\">\n          save sudoku\n        </button>\n        <button type=\"button\" (click)=\"printSudoku()\">\n          print sudoku\n        </button>\n        <button type=\"button\" (click)=\"parseSudoku()\">\n          parse sudoku\n        </button>\n        <button type=\"button\" (click)=\"board.fetchSudoku()\">\n          fetch new sudoku\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-6 col-s-6 leftColumn\" id=\"dd\">\n    <a class=\"container leftColumnContents\" id=\"leftColumnContents\">\n      <div *ngFor=\"let rows of board.live; let ro = index\" id=\"rowBoard\">\n        <a\n          class=\"containter\"\n          id=\"container\"\n          *ngFor=\"let cols of board.live; let co = index\"\n        >\n          <textarea\n            cellInput\n            id=\"cTextArea\"\n            type=\"text\"\n            maxlength=\"1\"\n            [disabled]=\"isDisabled(ro, co)\"\n            [style.background]=\"board.live[ro][co].bgColor\"\n            (mouseover)=\"mouseOver(ro, co)\"\n            (mouseleave)=\"mouseLeave(ro, co)\"\n            [style.color]=\"board.live[ro][co].fontColor\"\n            (input)=\"onType($event, ro, co)\"\n            (click)=\"onClick_cell(ro, co)\"\n            [style.left]=\"co * cpx + 'px'\"\n            [style.top]=\"ro * cpx + 'px'\"\n            [style.border-width]=\"'1px'\"\n            [style.width]=\"cpx + 'px'\"\n            [style.height]=\"cpx + 'px'\"\n            [style.border-left]=\"styleLeftBorder(co)\"\n            [style.border-right]=\"styleRightBorder(co)\"\n            [style.border-top]=\"styleTopBorder(ro)\"\n            [style.border-bottom]=\"styleBottomBorder(ro)\"\n            [style.font-size]=\"cpx / 2 + 'px'\"\n            [style.font-weight]=\"\n              board.start[ro][co].num != null && userPref.isShowDisabledAsBald\n                ? 'bold'\n                : 'normal'\n            \"\n          ></textarea>\n          <input\n            id=\"cell {{ ro }}, {{ co }}\"\n            type=\"text\"\n            maxlength=\"1\"\n            [disabled]=\"isDisabled(ro, co)\"\n            [style.background]=\"board.live[ro][co].bgColor\"\n            (mouseover)=\"mouseOver(ro, co)\"\n            (mouseleave)=\"mouseLeave(ro, co)\"\n            [style.color]=\"board.live[ro][co].fontColor\"\n            (input)=\"onType($event, ro, co)\"\n            (click)=\"onClick_cell(ro, co)\"\n            [(ngModel)]=\"board.live[ro][co].num\"\n            [style.left]=\"co * cpx + 'px'\"\n            [style.top]=\"ro * cpx + 'px'\"\n            [style.padding]=\"'0px'\"\n            [style.border-width]=\"'1px'\"\n            [style.width]=\"cpx + 'px'\"\n            [style.height]=\"cpx + 'px'\"\n            [style.border-left]=\"styleLeftBorder(co)\"\n            [style.border-right]=\"styleRightBorder(co)\"\n            [style.border-top]=\"styleTopBorder(ro)\"\n            [style.border-bottom]=\"styleBottomBorder(ro)\"\n            [style.border-radius]=\"'0px'\"\n            [style.font-size]=\"cpx / 2 + 'px'\"\n            [style.font-weight]=\"\n              board.start[ro][co].num != null && userPref.isShowDisabledAsBald\n                ? 'bold'\n                : 'normal'\n            \"\n          />\n          <textarea\n            style=\"position: absolute; z-index: 4; overflow: hidden;\"\n            type=\"text\"\n            [style.left]=\"co * cpx + 'px'\"\n            [style.top]=\"ro * cpx + 'px'\"\n            [style.background]=\"board.live[ro][co].bgColor\"\n            [style.border-left]=\"styleLeftBorder(co)\"\n            [style.border-right]=\"styleRightBorder(co)\"\n            [style.border-top]=\"styleTopBorder(ro)\"\n            [style.border-bottom]=\"styleBottomBorder(ro)\"\n            [style.width]=\"cpx + 'px'\"\n            [style.height]=\"cpx + 'px'\"\n            *ngIf=\"board.live[ro][co].isPencil ? true : false\"\n            (input)=\"onTypePencil($event)\"\n            [(ngModel)]=\"pencil\"\n            (click)=\"onClick_cell(ro, co)\"\n          >\n          </textarea>\n          <a\n            *ngFor=\"\n              let pencilRows of board.live[ro][co].pencil;\n              let penRow = index\n            \"\n          >\n            <a\n              *ngFor=\"\n                let pencilCols of board.live[ro][co].pencil;\n                let penCol = index\n              \"\n            >\n              <input\n                id=\"pencilCell {{ penRow }}, {{ penCol }} of cell {{ ro }}, {{\n                  co\n                }}\"\n                type=\"text\"\n                maxlength=\"1\"\n                style=\"\n                  text-align: center;\n                  position: absolute;\n                  pointer-events: none;\n                  z-index: 5;\n                  caret-color: transparent;\n                  /* font-weight: bold; */\n                  color: rgb(66, 65, 65);\n                \"\n                (keypress)=\"onTypePencil($event)\"\n                [style.left]=\"co * cpx + (penCol * cpx) / 3 + 'px'\"\n                [style.top]=\"ro * cpx + (penRow * cpx) / 3 + 'px'\"\n                [style.width]=\"cpx / 3 + 'px'\"\n                [style.height]=\"cpx / 3 + 'px'\"\n                [style.border-width]=\"'0px'\"\n                [(ngModel)]=\"board.live[ro][co].pencil[penRow][penCol]\"\n                *ngIf=\"board.live[ro][co].isPencil ? true : false\"\n                [style.font-size]=\"'13px'\"\n                [style.background]=\"board.live[ro][co].bgColor\"\n                [style.border-left]=\"styleLeftBorderPencil(co, penCol)\"\n                [style.border-right]=\"styleRightBorderPencil(co, penCol)\"\n                [style.border-top]=\"styleTopBorderPencil(ro, penRow)\"\n                [style.border-bottom]=\"styleBottomBorderPencil(ro, penRow)\"\n              />\n            </a>\n          </a>\n        </a>\n      </div>\n    </a>\n  </div>\n  <div class=\"col-4 col-s-4 rightColumn\">\n    <a class=\"rightColumnContentsAndroid\" id=\"rightColumnContentsAndroid\">\n      <div\n        class=\"col-xs-7\"\n        style=\"float: left; width: 70%; padding: 0px; padding-left: 5px;\"\n      >\n        <div name=\"numberPad\" style=\"margin-top: 3px;\">\n          <div\n            class=\"rower\"\n            *ngFor=\"let dummy of ' '.repeat(3).split(''); let x = index\"\n          >\n            <button\n              type=\"button\"\n              *ngFor=\"let dummy2 of ' '.repeat(3).split(''); let y = index\"\n              (click)=\"onClick_numberBtn(y + x * 3 + 1)\"\n              [style.border]=\"'1px solid gray'\"\n              [style.height]=\"'85px'\"\n              [style.width]=\"'85px'\"\n              [style.font-size]=\"'30px'\"\n              [style.hover]=\"'lightgray'\"\n            >\n              {{ y + x * 3 + 1 }}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"col-xs-5\"\n        style=\"float: left; width: 30%; padding: 0px; padding-top: 3px;\"\n      >\n        <div class=\"buttonObj\">\n          <button\n            type=\"button\"\n            id=\"newGame\"\n            class=\"btn btn-primary btn-lg font-weight-bold;\"\n            style=\"background: rgb(0, 150, 255);\"\n            (click)=\"newGame.resetGame()\"\n            [style.border-radius]=\"'1px'\"\n            [style.width]=\"'108px'\"\n          >\n            Restart\n          </button>\n        </div>\n\n        <div class=\"buttonObj\">\n          <button\n            type=\"button\"\n            style=\"margin-top: 20px;\"\n            class=\"btn btn-primary btn-lg font-weight-bold\"\n            style=\"background: orange;\"\n            (click)=\"erase()\"\n            [style.border-radius]=\"'0px'\"\n            [style.width]=\"'108px'\"\n          >\n            Erase\n          </button>\n        </div>\n\n        <div class=\"buttonObj\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-lg font-weight-bold\"\n            style=\"background: orangered;\"\n            (click)=\"hintSudokuCom()\"\n            [style.border-radius]=\"'0px'\"\n            [style.width]=\"'108px'\"\n          >\n            Hint\n          </button>\n        </div>\n\n        <div name=\"line3btns\">\n          <a class=\"buttonObj\">\n            <button\n              type=\"button\"\n              class=\"btn btn-primary btn-lg font-weight-bold\"\n              style=\"background: gray;\"\n              (click)=\"showErrors_btn()\"\n              [style.border-radius]=\"'0px'\"\n              [style.width]=\"'108px'\"\n            >\n              Rule Ex\n            </button>\n          </a>\n          <a class=\"buttonObj\">\n            <button\n              type=\"button\"\n              class=\"btn btn-primary btn-lg text-center font-weight-bold center\"\n              style=\"background: dodgerblue;\"\n              (click)=\"togglePencil()\"\n              [style.border-radius]=\"'0px'\"\n              [style.width]=\"'108px'\"\n              [style.background]=\"\n                board.live[board.sRow][board.sCol].isPencil ? 'yellow' : 'white'\n              \"\n            >\n              Notes\n            </button>\n          </a>\n        </div>\n      </div>\n    </a>\n    <a class=\"rightColumnContents\" id=\"rightColumnContents\">\n      <div class=\"buttonObj\">\n        <button\n          type=\"button\"\n          id=\"newGame\"\n          class=\"btn btn-primary btn-lg text-center font-weight-bold\"\n          style=\"\n            background: rgb(0, 150, 255);\n            text-align: center;\n            font-family: Source Sans Pro, sans-serif;\n            font-weight: 600;\n          \"\n          (click)=\"newGame.resetGame()\"\n          [style.border-radius]=\"'5px'\"\n          [style.width]=\"'225px'\"\n        >\n          New Game\n        </button>\n      </div>\n      <div name=\"numberPad\" style=\"margin-top: 3px;\">\n        <div\n          class=\"rower\"\n          *ngFor=\"let dummy of ' '.repeat(3).split(''); let x = index\"\n        >\n          <button\n            type=\"button\"\n            *ngFor=\"let dummy2 of ' '.repeat(3).split(''); let y = index\"\n            (click)=\"onClick_numberBtn(y + x * 3 + 1)\"\n            [style.border]=\"'1px solid gray'\"\n            [style.height]=\"'75px'\"\n            [style.width]=\"'75px'\"\n            [style.font-size]=\"'31px'\"\n            [style.hover]=\"'lightgray'\"\n            [style.font-family]=\"'Sans-serif'\"\n          >\n            {{ y + x * 3 + 1 }}\n          </button>\n        </div>\n      </div>\n      <div name=\"line2btns\" style=\"margin-top: 5px;\">\n        <a class=\"buttonObj\">\n          <button\n            type=\"button\"\n            style=\"color: black;\"\n            class=\"btn btn-primary btn-lg text-center center text-align: center;\"\n            (click)=\"erase()\"\n            [style.border-radius]=\"'5px'\"\n            [style.width]=\"'112px'\"\n          >\n            Erase\n          </button>\n        </a>\n\n        <a class=\"buttonObj\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-lg text-center font-weight-bold center text-align: center;\"\n            style=\"background: white; margin-left: 1px; color: black;\"\n            (click)=\"hintSudokuCom()\"\n            [style.border-radius]=\"'5px'\"\n            [style.width]=\"'112px'\"\n          >\n            Hint\n          </button>\n        </a>\n      </div>\n      <div name=\"line3btns\" style=\"margin-top: 1px;\">\n        <a class=\"buttonObj\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-lg text-center font-weight-bold center\"\n            style=\"background: white; color: black;\"\n            (click)=\"showErrors_btn()\"\n            [style.border-radius]=\"'5px'\"\n            [style.width]=\"'112px'\"\n          >\n            Examine\n          </button>\n        </a>\n        <a class=\"buttonObj\" style=\"width: 112px; position: relative;\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-lg text-center font-weight-bold center\"\n            style=\"\n              margin-left: 1px;\n              position: absolute;\n              z-index: 5;\n              pointer-events: none;\n              color: black;\n            \"\n            (click)=\"togglePencil()\"\n            [style.border-radius]=\"'5px'\"\n            [style.width]=\"'112px'\"\n            [style.background]=\"\n              !board.live[board.sRow][board.sCol].isPencil\n                ? 'white'\n                : 'rgb(0, 150, 255)'\n            \"\n            [style.color]=\"\n              !board.live[board.sRow][board.sCol].isPencil ? 'black' : 'white'\n            \"\n          >\n            Notes\n          </button>\n          <textarea\n            type=\"text\"\n            style=\"\n              position: absolute;\n              margin-left: 1px;\n              width: 112px;\n              overflow: hidden;\n            \"\n            [(ngModel)]=\"pencilButtonText\"\n            (input)=\"onTypePencil($event)\"\n            (click)=\"togglePencil()\"\n            [style.border-radius]=\"'5px'\"\n          ></textarea>\n        </a>\n      </div>\n      <div style=\"margin-top: 1px;\">\n        <a class=\"buttonObj\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-lg text-center center\"\n            style=\"background: white; color: black;\"\n            (click)=\"testPencil()\"\n            [style.border-radius]=\"'5px'\"\n            [style.width]=\"'112px'\"\n          >\n            Testpencil\n          </button>\n        </a>\n      </div>\n    </a>\n  </div>\n  <!-- <div id=\"devColumnAndroid\" class=\"col-2 col-s-2 devColumnAdroid\">\n    <div class=\"testBtns\" id=\"testButtons\">\n      <p style=\"font-weight: bold; color: blueviolet;\">test aid</p>\n      <button type=\"button\" (click)=\"scanForErrors()\">\n        {{ scanButtonName }}\n      </button>\n      <button type=\"button\" (click)=\"togglePathHighlight()\">\n        {{ userPref.highlightPath_name }}\n      </button>\n      <button type=\"button\" (click)=\"toggleSplitBoard()\">\n        {{ splitBtnName }}\n      </button>\n      <button type=\"button\" (click)=\"solveSudoku(board.live, 9)\">Solve</button>\n      <button type=\"button\" (click)=\"classic_colors()\">Classic colors</button>\n      <button type=\"button\" (click)=\"toggle_boardPresetInputs_isDisabled()\">\n        toggle disabled\n      </button>\n      <button type=\"button\" (click)=\"toggle_isShowDisabledAsBold()\">\n        unbold/bold readonly\n      </button>\n      <button type=\"button\" (click)=\"saveSudoku('234289')\">\n        save sudoku\n      </button>\n      <button type=\"button\" (click)=\"printSudoku()\">\n        print sudoku\n      </button>\n    </div>\n  </div> -->\n</div>\n\n<!-- <div class=\"rower\"></div> -->\n","import {\r\n  Directive,\r\n  Renderer2,\r\n  ElementRef,\r\n  OnInit,\r\n  HostListener,\r\n} from \"@angular/core\";\r\nimport { Board } from \"./sudoku/board.service\";\r\n\r\n@Directive({ selector: \"[cellInput]\" })\r\nexport class HotkeyDirective implements OnInit {\r\n  constructor(\r\n    public board: Board,\r\n    public elementRef: ElementRef,\r\n    renderer: Renderer2\r\n  ) {}\r\n\r\n  @HostListener(\"document:keydown.d\", [\"$event\"])\r\n  keydownDev(event: KeyboardEvent) {\r\n    this.board.devModeOn = !this.board.devModeOn;\r\n  }\r\n  6;\r\n  @HostListener(\"document:keydown.n\", [\"$event\"])\r\n  keydownNote(event: KeyboardEvent) {\r\n    this.board.togglePencil();\r\n  }\r\n\r\n  // @HostListener(\"document:keydown.1\", [\"$event\"])\r\n  // keypress1(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 1;\r\n  // }\r\n  // @HostListener(\"document:keydown.2\", [\"$event\"])\r\n  // keypress2(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 2;\r\n  // }\r\n  // @HostListener(\"document:keydown.3\", [\"$event\"])\r\n  // keypress3(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 3;\r\n  // }\r\n  // @HostListener(\"document:keydown.4\", [\"$event\"])\r\n  // keypress4(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 4;\r\n  // }\r\n  // @HostListener(\"document:keydown.5\", [\"$event\"])\r\n  // keypress5(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 5;\r\n  // }\r\n  // @HostListener(\"document:keydown.6\", [\"$event\"])\r\n  // keypress6(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 6;\r\n  // }\r\n  // @HostListener(\"document:keydown.7\", [\"$event\"])\r\n  // keypress7(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 7;\r\n  // }\r\n  // @HostListener(\"document:keydown.8\", [\"$event\"])\r\n  // keypress8(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 8;\r\n  // }\r\n  // @HostListener(\"document:keydown.9\", [\"$event\"])\r\n  // keypress9(event: KeyboardEvent) {\r\n  //   this.board.live[this.board.sRow][this.board.sCol].num = 9;\r\n  // }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Board } from \"../sudoku/board.service\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({\r\n  providers: [],\r\n})\r\nexport class NewGame {\r\n  constructor(public board: Board) {}\r\n\r\n  /**Restarts the board*/\r\n  resetGame() {\r\n    //this.board.live = Object.assign({}, this.board.start);\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        this.board.live[i][j].num = this.board.start[i][j].num;\r\n        this.board.live[i][j].fontColor = this.board.start[i][j].fontColor;\r\n        this.board.live[i][j].bgColor = this.board.start[i][j].bgColor;\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class NumberButton {\r\n  numberBtn: number[] = [];\r\n\r\n  numberBtnArray() {\r\n    for (let i = 0; i < 9; i++) {\r\n      this.numberBtn.push(i + 1);\r\n    }\r\n  }\r\n}\r\n","import { cell } from \"./cell.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { switchMap } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { UserPreferences } from \"../../../_user/userPreferences.service\";\r\n\r\n@Injectable()\r\nexport class Board {\r\n  constructor(public http: HttpClient, public userPref: UserPreferences) {\r\n    console.log(this.live);\r\n  }\r\n  devModeOn = false;\r\n\r\n  /**live game board*/\r\n  live: cell[][] = [];\r\n\r\n  /**static beginning board*/\r\n  start: cell[][] = [];\r\n\r\n  /**copy aid board for hints */\r\n  copy: cell[][] = [];\r\n\r\n  /**solved board(to aid performance)*/\r\n  solved: cell[][] = [];\r\n\r\n  sRow = 0; //selectedRow. dynamically stored Selected Row index\r\n  sCol = 0; //selectedColumn dynamically stored Column index\r\n\r\n  hintNum = null;\r\n  hintCol = null;\r\n  hintRow = null;\r\n\r\n  /** saves board as a String from sudoku.txt*/ stringOf_sudoku_txt =\r\n    \"sudoku.txt\";\r\n\r\n  /**Stores all the numbers of end-result board. Pre-determined for now.\r\n   *\r\n   * --due-to-change */\r\n  fBoard: number[][] = [\r\n    //final Board\r\n    [9, 5, 7, 6, 1, 3, 2, 8, 4],\r\n    [4, 8, 3, 2, 5, 7, 1, 9, 6],\r\n    [6, 1, 2, 8, 4, 9, 5, 3, 7],\r\n    [1, 7, 8, 3, 6, 4, 9, 5, 2],\r\n    [5, 2, 4, 9, 7, 1, 3, 6, 8],\r\n    [3, 6, 9, 5, 2, 8, 7, 4, 1],\r\n    [8, 4, 5, 7, 9, 2, 6, 1, 3],\r\n    [2, 9, 1, 4, 3, 6, 8, 7, 5],\r\n    [7, 3, 6, 1, 8, 5, 4, 2, 9],\r\n  ];\r\n\r\n  /**This method is ran on ng-init and is responsible for importing a sudoku board from the\r\n   * sudoku.txt file into a string variable to be used later */\r\n  getFileData() {\r\n    setTimeout(() => {\r\n      console.log(this.live);\r\n    }, 1000);\r\n    return this.http\r\n      .get(\"/assets/read/filePath2.json\")\r\n      .pipe(\r\n        switchMap((response: any) =>\r\n          this.http.get(response.pathToFile, {\r\n            responseType: \"text\",\r\n          })\r\n        )\r\n      )\r\n      .subscribe((text) => {\r\n        this.stringOf_sudoku_txt = text;\r\n        this.build_cell_array_fromString2(\r\n          this.live,\r\n          this.stringOf_sudoku_txt,\r\n          this.start\r\n        );\r\n        this.build_cell_array(this.copy);\r\n        this.build_cell_array(this.solved);\r\n        this.copyBoardS(this.solved, this.live);\r\n        this.solveSudoku(this.solved, 9);\r\n      });\r\n  }\r\n\r\n  fetchSudoku() {\r\n    this.http\r\n      .post(\"http://localhost:3000/fetchSudoku\", 1)\r\n      .subscribe((responseData) => {});\r\n  }\r\n\r\n  /**Defines a declared empty cell array into a 9x9 cell array\r\n   * @param board empty declared cell array\r\n   */\r\n  build_cell_array(board: cell[][]) {\r\n    for (let r = 0; r < 9; r++) {\r\n      board.push();\r\n      board[r] = [];\r\n      for (let c = 0; c < 9; c++) {\r\n        board[r][c] = new cell();\r\n      }\r\n    }\r\n  }\r\n\r\n  copyBoardS(arr: cell[][], arr2: cell[][]) {\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        arr[row][col].num = arr2[row][col].num;\r\n        arr[row][col].bgColor = arr2[row][col].bgColor;\r\n        arr[row][col].fontColor = arr2[row][col].fontColor;\r\n        //console.log(row, col);\r\n        //console.log(arr[row][col].num);\r\n        //console.log(arr[row][col].bgColor);\r\n        //console.log(arr[row][col].fontColor);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**Solves sudoku to full\r\n   * @param arr Board cell array\r\n   * @param n Board.length\r\n   * @param isHint if this function is used for just a HINT. Not a full board solution   */\r\n  solveSudoku(arr: cell[][], n: number, isHint?: boolean) {\r\n    if (isHint === undefined) {\r\n      isHint = false;\r\n    }\r\n    let row = -1;\r\n    let col = -1;\r\n    let isEmpty = true;\r\n    for (let i = 0; i < n; i++) {\r\n      for (let j = 0; j < n; j++) {\r\n        if (arr[i][j].num == 0 || arr[i][j].num == null) {\r\n          row = i;\r\n          col = j;\r\n\r\n          //we still have some remaining\r\n          //missing values in Sudoku\r\n          isEmpty = false;\r\n          break;\r\n        }\r\n      }\r\n      if (!isEmpty) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    //no empty space left\r\n    if (isEmpty) {\r\n      return true;\r\n    }\r\n\r\n    //else for each-row backtrack\r\n    for (let number = 1; number <= n; number++) {\r\n      if (this.isSafe(arr, row, col, number)) {\r\n        if (isHint) {\r\n          if (this.hintRow === null) {\r\n            this.hintRow = row;\r\n            this.hintCol = col;\r\n            this.hintNum = number;\r\n          }\r\n        }\r\n        arr[row][col].num = number;\r\n        if (this.solveSudoku(arr, n)) {\r\n          //print(board, n);\r\n          return true;\r\n        } else {\r\n          if (isHint) {\r\n            if (this.hintRow !== null) {\r\n              this.hintRow = null;\r\n              this.hintCol = null;\r\n              this.hintNum = null;\r\n            }\r\n          }\r\n          //replace it\r\n          arr[row][col].num = 0;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**Returns TRUE if there aren't any other identical numbers in it's row, column or sub-grid\r\n   * else returns FALSE\r\n   *\r\n   * @param row Row index\r\n   * @param col Column index\r\n   * @param num The number that resides in the currently selected bracket\r\n   */\r\n  isSafe(arr: cell[][], row: number, col: number, num: number) {\r\n    for (let columns = 0; columns < this.live.length; columns++) {\r\n      if (arr[row][columns].num == num) {\r\n        if (columns !== col) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let rows = 0; rows < arr.length; rows++) {\r\n      if (arr[rows][col].num == num) {\r\n        if (rows !== row) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    let sqrt = Math.sqrt(this.live.length); //sqrt=3\r\n    let boxRowStart = row - (row % sqrt);\r\n    let boxColStart = col - (col % sqrt);\r\n\r\n    for (let r = boxRowStart; r < boxRowStart + sqrt; r++) {\r\n      for (let d = boxColStart; d < boxColStart + sqrt; d++) {\r\n        if (arr[r][d].num == num) {\r\n          if (r !== row || d !== col) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**builds a sudoku board(s) from a string var of sudoku numbers\r\n   * and an empty cell array(s)\r\n   * @param liveBoard cell array for LIVE board\r\n   * @param t imported string from txt file\r\n   * @param startBoard -?optional- cell array for PRESET board\r\n   */\r\n  build_cell_array_fromString(\r\n    liveBoard: cell[][],\r\n    t: string,\r\n    startBoard?: cell[][]\r\n  ) {\r\n    let n = 0; //string t char index\r\n    let isPresetIncluded = true;\r\n    if (startBoard === undefined) {\r\n      isPresetIncluded = false;\r\n    } else {\r\n      isPresetIncluded = true;\r\n    }\r\n    for (let r = 0; r < 9; r++) {\r\n      //row\r\n      liveBoard.push();\r\n      liveBoard[r] = [];\r\n      if (isPresetIncluded) {\r\n        startBoard.push();\r\n        startBoard[r] = [];\r\n      }\r\n      for (let c = 0; c < 9; c++) {\r\n        //column\r\n        liveBoard[r][c] = new cell();\r\n        this.initPencilArray(liveBoard[r][c]);\r\n        startBoard[r][c] = new cell();\r\n        if (t.charAt(n + 1) == \"0\") {\r\n          liveBoard[r][c].num = null; //   *-redundant?\r\n          liveBoard[r][c].bgColor = this.userPref.input_bgColor;\r\n          liveBoard[r][c].fontColor = this.userPref.input_fontColor;\r\n          if (isPresetIncluded) {\r\n            startBoard[r][c].num = null; //   *-redundant?\r\n            startBoard[r][c].bgColor = this.userPref.input_bgColor;\r\n            startBoard[r][c].fontColor = this.userPref.input_fontColor;\r\n          }\r\n        } else {\r\n          liveBoard[r][c].num = +t.charAt(n + 1);\r\n          liveBoard[r][c].bgColor = this.userPref.disabledInput_bgColor;\r\n          liveBoard[r][c].fontColor = this.userPref.disabledInput_fontColor;\r\n          if (isPresetIncluded) {\r\n            startBoard[r][c].num = +t.charAt(n + 1);\r\n            startBoard[r][c].bgColor = this.userPref.disabledInput_bgColor;\r\n            startBoard[r][c].fontColor = this.userPref.disabledInput_fontColor;\r\n          }\r\n        }\r\n        n = n + 2;\r\n      }\r\n      n = n + 4;\r\n    }\r\n    console.log(\"--------live--------\");\r\n    console.log(liveBoard);\r\n\r\n    console.log(\"--------start--------\");\r\n    console.log(startBoard);\r\n  }\r\n\r\n  /**builds a sudoku board(s) from a string var of sudoku numbers\r\n   * and an empty cell array(s)\r\n   * @param liveBoard cell array for LIVE board\r\n   * @param t imported string from txt file\r\n   * @param startBoard -?optional- cell array for PRESET board\r\n   */\r\n  build_cell_array_fromString2(\r\n    liveBoard: cell[][],\r\n    t: string,\r\n    startBoard?: cell[][]\r\n  ) {\r\n    let n = 0; //string t char index\r\n    let isPresetIncluded = true;\r\n    if (startBoard === undefined) {\r\n      isPresetIncluded = false;\r\n    } else {\r\n      isPresetIncluded = true;\r\n    }\r\n    for (let r = 0; r < 9; r++) {\r\n      //row\r\n      liveBoard.push();\r\n      liveBoard[r] = [];\r\n      if (isPresetIncluded) {\r\n        startBoard.push();\r\n        startBoard[r] = [];\r\n      }\r\n      for (let c = 0; c < 9; c++) {\r\n        //column\r\n        liveBoard[r][c] = new cell();\r\n        this.initPencilArray(liveBoard[r][c]);\r\n        startBoard[r][c] = new cell();\r\n        if (t.charAt(n) == \"0\") {\r\n          liveBoard[r][c].num = null; //   *-redundant?\r\n          liveBoard[r][c].bgColor = this.userPref.input_bgColor;\r\n          liveBoard[r][c].fontColor = this.userPref.input_fontColor;\r\n          if (isPresetIncluded) {\r\n            startBoard[r][c].num = null; //   *-redundant?\r\n            startBoard[r][c].bgColor = this.userPref.input_bgColor;\r\n            startBoard[r][c].fontColor = this.userPref.input_fontColor;\r\n          }\r\n        } else {\r\n          liveBoard[r][c].num = +t.charAt(n);\r\n          liveBoard[r][c].bgColor = this.userPref.disabledInput_bgColor;\r\n          liveBoard[r][c].fontColor = this.userPref.disabledInput_fontColor;\r\n          if (isPresetIncluded) {\r\n            startBoard[r][c].num = +t.charAt(n);\r\n            startBoard[r][c].bgColor = this.userPref.disabledInput_bgColor;\r\n            startBoard[r][c].fontColor = this.userPref.disabledInput_fontColor;\r\n          }\r\n        }\r\n        n++;\r\n      }\r\n    }\r\n    console.log(\"--------live--------\");\r\n    console.log(liveBoard);\r\n\r\n    console.log(\"--------start--------\");\r\n    console.log(startBoard);\r\n  }\r\n\r\n  initPencilArray(c: cell) {\r\n    c.isPencil = false;\r\n    c.pencil = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      c.pencil.push([]);\r\n      // c.pencil[i] = [];\r\n      for (let j = 0; j < 3; j++) {\r\n        c.pencil[i].push(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  classic_colors(b?: boolean) {\r\n    // if ((b = undefined)) {\r\n    //   let b = true;\r\n    // }\r\n    if (b == true) {\r\n      this.userPref.highlightPath_bgColor = \"white\";\r\n      this.userPref.input_bgColor = \"rgb(215, 215, 215)\"; //slightly lighter- Gray\r\n      this.userPref.disabledInput_fontColor = \"black\";\r\n      this.userPref.highlightPath_disabled_bgColor = \"white\";\r\n      this.userPref.highlightPath_selected_bgColor = \"white\";\r\n      this.userPref.disabledInput_bgColor = \"rgb(215, 215, 215)\"; //slightly lighter- Gray\r\n      this.userPref.highlightPath_selected_bgColor = \"lightgreen\";\r\n    }\r\n    // if ((b = true)) {\r\n    //   this.update_userPref_disabled_colors();\r\n    // }\r\n  }\r\n\r\n  /**Update colors of preset */\r\n  update_userPref_disabled_colors() {\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        this.start[row][col].bgColor = this.userPref.disabledInput_bgColor;\r\n        this.start[row][col].fontColor = this.userPref.disabledInput_fontColor;\r\n      }\r\n    }\r\n    this.decolor_bg();\r\n    this.decolor_font();\r\n  }\r\n\r\n  /**Restores all cells BG colors to default\r\n   * @param r Row index of current row\r\n   * @param c Column index of current column*/\r\n  decolor_bg(bg?: string) {\r\n    if (bg !== undefined) this.color_live_bg(bg);\r\n    else\r\n      for (let row = 0; row < 9; row++) {\r\n        for (let col = 0; col < 9; col++) {\r\n          this.live[row][col].bgColor = this.start[row][col].bgColor;\r\n        }\r\n      }\r\n  }\r\n\r\n  /**Colors BG of ALL cells*/\r\n  color_live_bg(color: string) {\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        this.live[row][col].bgColor = color;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**Restores all cells FONT colors to default\r\n   * @param r Row index of current row\r\n   * @param c Column index of current column*/\r\n  decolor_font() {\r\n    for (let row = 0; row < 9; row++) {\r\n      for (let col = 0; col < 9; col++) {\r\n        this.live[row][col].fontColor = this.start[row][col].fontColor;\r\n      }\r\n    }\r\n  }\r\n\r\n  togglePencil() {\r\n    this.live[this.sRow][this.sCol].isPencil = !this.live[this.sRow][this.sCol]\r\n      .isPencil;\r\n    this.live[this.sRow][this.sCol].num = null;\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        this.live[this.sRow][this.sCol].pencil[i][j] = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  row_ofSubgrid(row?: number) {\r\n    if (row === undefined) {\r\n      let row = this.sRow;\r\n    }\r\n    if (row < 3) {\r\n      return 0;\r\n    }\r\n    if (row >= 3 && row < 6) {\r\n      return 3;\r\n    }\r\n    if (row > 5) {\r\n      return 6;\r\n    }\r\n  }\r\n\r\n  col_ofSubgrid(col?: number) {\r\n    if (col === undefined) {\r\n      let row = this.sCol;\r\n    }\r\n    if (col < 3) {\r\n      return 0;\r\n    }\r\n    if (col >= 3 && col < 6) {\r\n      return 3;\r\n    }\r\n    if (col > 5) {\r\n      return 6;\r\n    }\r\n  }\r\n\r\n  /** Highlights the row, column and family of the selected bracket for player clarity\r\n   * @param r row\r\n   * @param c column */\r\n  highlightSelect(r: number, c: number) {\r\n    if (this.userPref.highlightPath_state) {\r\n      let rowSubGrid = this.row_ofSubgrid(r);\r\n      let colSubGrid = this.col_ofSubgrid(c);\r\n      let row;\r\n      let col;\r\n      for (let rwp = 0; rwp <= 2; rwp++) {\r\n        for (let clp = 0; clp <= 2; clp++) {\r\n          row = rowSubGrid + rwp;\r\n          col = colSubGrid + clp;\r\n          if (\r\n            this.start[row][col].bgColor == this.userPref.disabledInput_bgColor\r\n          )\r\n            this.live[row][\r\n              col\r\n            ].bgColor = this.userPref.highlightPath_disabled_bgColor;\r\n          else\r\n            this.live[row][col].bgColor = this.userPref.highlightPath_bgColor;\r\n        }\r\n      }\r\n      for (let columns = 0; columns < 9; columns++) {\r\n        if (\r\n          this.start[r][columns].bgColor == this.userPref.disabledInput_bgColor\r\n        ) {\r\n          this.live[r][\r\n            columns\r\n          ].bgColor = this.userPref.highlightPath_disabled_bgColor;\r\n        } else\r\n          this.live[r][columns].bgColor = this.userPref.highlightPath_bgColor;\r\n      }\r\n      for (let rows = 0; rows < 9; rows++) {\r\n        if (\r\n          this.start[rows][c].bgColor == this.userPref.disabledInput_bgColor\r\n        ) {\r\n          this.live[rows][\r\n            c\r\n          ].bgColor = this.userPref.highlightPath_disabled_bgColor;\r\n        } else this.live[rows][c].bgColor = this.userPref.highlightPath_bgColor;\r\n      }\r\n      this.live[this.sRow][\r\n        this.sCol\r\n      ].bgColor = this.userPref.highlightPath_selected_bgColor;\r\n      this.live[this.sRow][\r\n        this.sCol\r\n      ].preHoverBgColor = this.userPref.highlightPath_selected_bgColor;\r\n    }\r\n  }\r\n}\r\n","export class cell {\r\n  public num: number;\r\n  public bgColor: string;\r\n  public fontColor: string;\r\n  public pencil: number[][];\r\n  public isPencil: boolean;\r\n  public preHoverBgColor: string;\r\n\r\n  /**constrcutor for a cell\r\n   *\r\n   * @param num number value of cell\r\n   * @param bgColor Background color of cell\r\n   * @param fontColor Font Color of cell\r\n   */\r\n  constructor(\r\n    num?: number,\r\n    bgColor?: string,\r\n    fontColor?: string,\r\n    pencil?: number[][],\r\n    isPencil?: boolean,\r\n    preHoverBgColor?: string\r\n  ) {\r\n    this.num = num;\r\n    this.bgColor = bgColor;\r\n    this.fontColor = fontColor;\r\n    this.pencil = pencil;\r\n    this.isPencil = isPencil;\r\n    this.preHoverBgColor = preHoverBgColor;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Renderer2,\r\n  ElementRef,\r\n  OnInit,\r\n  HostListener,\r\n} from \"@angular/core\";\r\nimport { Board } from \"./board.service\";\r\n\r\n@Directive({ selector: \"[cellInput]\" })\r\nexport class CellInputDelete implements OnInit {\r\n  constructor(\r\n    public board: Board,\r\n    public elementRef: ElementRef,\r\n    renderer: Renderer2\r\n  ) {}\r\n  @HostListener(\"document:keydown.backspace\", [\"$event\"])\r\n  keydownBackspace(event: KeyboardEvent) {\r\n    this.board.decolor_bg();\r\n    this.board.decolor_font();\r\n    this.board.highlightSelect(this.board.sRow, this.board.sCol);\r\n    if (this.board.live[this.board.sRow][this.board.sCol].isPencil) {\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          this.board.live[this.board.sRow][this.board.sCol].pencil[i][j] = null;\r\n        }\r\n      }\r\n    } else {\r\n      this.board.live[this.board.sRow][this.board.sCol].num = null;\r\n    }\r\n  }\r\n\r\n  @HostListener(\"document:keydown.delete\", [\"$event\"])\r\n  keydownDelete(event: KeyboardEvent) {\r\n    this.board.decolor_bg();\r\n    this.board.decolor_font();\r\n    this.board.highlightSelect(this.board.sRow, this.board.sCol);\r\n    if (this.board.live[this.board.sRow][this.board.sCol].isPencil) {\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          this.board.live[this.board.sRow][this.board.sCol].pencil[i][j] = null;\r\n        }\r\n      }\r\n    } else {\r\n      this.board.live[this.board.sRow][this.board.sCol].num = null;\r\n    }\r\n  }\r\n\r\n  @HostListener(\"document:keydown.escape\", [\"$event\"])\r\n  keydownEsc(event: KeyboardEvent) {\r\n    this.board.decolor_bg();\r\n    this.board.decolor_font();\r\n    this.board.highlightSelect(this.board.sRow, this.board.sCol);\r\n    if (this.board.live[this.board.sRow][this.board.sCol].isPencil) {\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          this.board.live[this.board.sRow][this.board.sCol].pencil[i][j] = null;\r\n        }\r\n      }\r\n    } else {\r\n      this.board.live[this.board.sRow][this.board.sCol].num = null;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-leaderboards\",\r\n  templateUrl: \"./leaderboards.component.html\",\r\n})\r\nexport class Leaderboards {\r\n  testLeft = 300;\r\n}\r\n","<div style=\"width: 100%; height: 10%; border: 1px solid;\">\r\n  <div style=\"width: 50%; height: 40px; border: 1px solid; top: 80px;\"></div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}